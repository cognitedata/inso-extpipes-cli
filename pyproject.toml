[tool.poetry]
# matching the name of the "script" hook, used from Dockerfile
name = "extpipes-cli"
version = "3.0.0-beta2"
description = "A CLI to deploy CDF Extraction Pipelines"
authors = ["Peter Arwanitis <peter.arwanitis@cognite.com>", "Tugce Ozgur Oztetik <tugce.oztetik@cognite.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/cognitedata/inso-extpipes-cli"

packages = [
    { include="extpipes", from="src" },
]

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^0.21.1"
dependency-injector = {version = "^4.41.0", extras = ["yaml"]}
click = "^8.1"
cognite-sdk = {version = "^6", extras = ["pandas"]}
rich = "^13"
jinja2 = "^3.1"
pydantic-settings = "^2"

[tool.poetry.dev-dependencies]
autopep8 = "^2.0.1"
mypy = "^1.5"
pre-commit = "^3.3"
pytest = "^7.2.1"

[tool.black]
line-length = 120
target_version = ['py311']
include = '\.py$'

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning:pkg_resources",  # TODO check again with dynaconf>=3.2.0 (introduced in setuptools==67.5.0)
]
# addopts = "--doctest-modules"
# markers = [
#     "full: Requiers all optional dependencies to run.",
# ]
pythonpath = ["src"]
testpaths = ["tests"] # , "src/extpipes"

[tool.poetry.scripts]
# using a hyphen version and same as [tool.poetry].name
# check 'packages' definition, which makes 'extpipes' package available
extpipes-cli = "extpipes.__main__:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
